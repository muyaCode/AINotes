import{_ as e,c as a,o as s,a4 as t}from"./chunks/framework.DBIahkuf.js";const o="/AINotes/assets/v2-b157d72e97e6dfc08489a2f0c23979f1_720w.Y-tMn1s2.webp",l="/AINotes/assets/v2-695c8ca254fa6856c8e3d8a6a530d2db_720w.DV8LsbOV.webp",n="/AINotes/assets/297ad0e3c52c44e18ea5d23826d0c41c.BXvSmM-s.webp",i="/AINotes/assets/81d586d7aeac4a638b430f89a39eb10e.DZxITubo.webp",r="/AINotes/assets/a4765e3b177c4e999a3f1becab8a1f46.MSxbGW1U.webp",p="/AINotes/assets/5866442a218f4ac8a54fe2b293e6629e.DkMobgX6.webp",c="/AINotes/assets/73bbbc2e939a4cd08e36e8144c42c02c.B_1A3ASs.webp",b="/AINotes/assets/032bfd063bc84870a4a57df3384f3fc2.BsAJeyZ5.webp",d="/AINotes/assets/44d2f05cf9574d069574cd10cdf4c422.BGdWlBgh.webp",u="/AINotes/assets/1087279493064d6981c9ca44d0c36009.CDcdR8tI.webp",h="/AINotes/assets/2ada8561cca6458e90d3a057eaefc56e.Dz1SL0X1.webp",f="/AINotes/assets/9c68b2b663054c608cff10e45467c9ea.CIK-3DdH.webp",m="/AINotes/assets/16fca336c3a14205a7d413e487b7fcff.CGucM9wM.webp",g="/AINotes/assets/ef9102da517542058cfa8626d59f8aa9.BUzMRl4W.webp",_="/AINotes/assets/918cc4140844474c9ca1eb64e43baa7.2-QVXKVj.webp",w="/AINotes/assets/0c26c27e69e147e1b6abb349453891d7.FINda0nM.webp",y="/AINotes/assets/3afac0f12d1841f683a490af55c8f70f.Dl1DIC-R.webp",A="/AINotes/assets/4348c311ee7e42f1bb4e97063fcee455.B5g5YMAc.webp",k="/AINotes/assets/06db1e708ff2477f99ca7f92ddad99f4.CRTeruG4.webp",B="/AINotes/assets/ae48ccde905848db943969a5b5753dbf.C-9m0Fgj.webp",C="/AINotes/assets/beca9c4340e544db8f3a02bfe657c734.BosGCAf9.webp",v="/AINotes/assets/c18ed9d6616d49a28eb64941c9c067be.UQVJMwcz.webp",q="/AINotes/assets/383f7ddc9cb248259f1d4c97996f8015.CwIyWJvv.webp",I="/AINotes/assets/4459267623dc4dcf86099054df710b1.CsirZpO9.webp",D="/AINotes/assets/4133c811a2934a1694699826db8ae81d.Di2VXa-Y.webp",F="/AINotes/assets/8bcf8b46fc2f47989d6c68539f4e785a.CedZd-yU.webp",P="/AINotes/assets/2537e46071c446daa580a19524b0b5fa.DhPSgJmW.webp",S="/AINotes/assets/6c0716506b574dd192dcd731f02a4439.BUlm6X8y.webp",E="/AINotes/assets/94ebed1ee4fa4f69ba336a4e5e38a7e2.8TxMtSUy.webp",x="/AINotes/assets/de48be10ecce4aaa9856708debcaa648.BInhZiI9.webp",N="/AINotes/assets/a497053c76914d55a2dbfd584b621697.B7zTwGWh.webp",U="/AINotes/assets/2c2ab559a0d24cf9a691f099249c9dfc.BBFCi4f1.webp",M="/AINotes/assets/27c37f2509fa453b9c5832e8efa1d17c.DqhcnMJX.webp",G="/AINotes/assets/26641d0900034b6790a74c55158342f7.sAq83Q46.webp",T="/AINotes/assets/396f291473fc4ab0adf45912ddd29c98.CXoP59Dd.webp",V="/AINotes/assets/d8384a2ffde44f8a80b1dfb4110754a3.GL39yTY5.webp",j="/AINotes/assets/a3dd82e935114ff98a93884abd7e57e1.DelKYzFq.webp",L="/AINotes/assets/91379da9e28d45e2b8c483ae0f9f5d5c.DWmW_Pe8.webp",W="/AINotes/assets/d94ca6527af644bf97965cf06f8811b0.BFgDyqmB.webp",R="/AINotes/assets/908347c3a68643d8968fa210a1adb25.BR1PxdOo.webp",O="/AINotes/assets/18881b21b25d4337bc4531e8559cd125.CEPtuIWm.webp",z="/AINotes/assets/6b082996f09a4ae9ace0754d57ce26c.CNGwH62x.webp",H="/AINotes/assets/e6d807a059ba4e359f9c222d1dcbd99.DZhlhpKs.webp",K="/AINotes/assets/f343c4bee7ae476c9050cc71f3b22799.Wh5acz--.webp",X="/AINotes/assets/1ac5e30472a443108a65fc56c8456038.C_tj-u2P.webp",Q="/AINotes/assets/42f38bf33a024b9c9a6289ffdf40b9f3.B_Cdk7jG.webp",Y="/AINotes/assets/de5020056a2a4a148d72018c1f97bc34.BmcLuPXQ.webp",J="/AINotes/assets/2e09f69b95ba431ba1396c34649930bc.4h86JFuy.webp",Z="/AINotes/assets/9feee05cd1e74876bca2adb782af1f92.C3bKrgaH.webp",$="/AINotes/assets/1010f22002da40c7a8bb742a0715e250.DLM1GXbm.webp",ee="/AINotes/assets/cb899c8c0cd1d4debc5675c28f04aaa795adf8ad.png@1256w_732h_!web-article-pic.C2cVwcVl.webp",ae="/AINotes/assets/49a767358b60c71294e0cb3abec8fc7f915c642d.png@1256w_1628h_!web-article-pic.ClfNr4Hy.webp",se="/AINotes/assets/34157366dd77d5047778ec6dfdde21e0bd92a0b8.png@1256w_626h_!web-article-pic.DrVFGS7A.webp",te="/AINotes/assets/f7041dcae9f52a351c3aac7af46740c3f558fe2a.png@1256w_812h_!web-article-pic.C5gWJH3d.webp",oe="/AINotes/assets/7eddaac9520baf786ce4a73787fae0844ddcdcbf.png@1256w_950h_!web-article-pic.BSW9AQns.webp",le="/AINotes/assets/e9a62534ae48c3068a266ffaaa33343768981658.png@1256w_476h_!web-article-pic.DQa91X0h.webp",ne="/AINotes/assets/9b16168b77c097a95eb1fd5fa4ba6f485d4ddd38.png@1256w_1548h_!web-article-pic.BtQh7mUf.webp",ie="/AINotes/assets/0aaf812b1be4e651f78c2c13b05c5e4e965202f3.png@1256w_614h_!web-article-pic.Dxfj3aP3.webp",re="/AINotes/assets/f704b2e922d77401e582459a957fe363fb03a614.png@1256w_752h_!web-article-pic.bAd5VcGC.webp",pe="/AINotes/assets/d37df95653b27bfc1984ca23b0074f51802cfd7a.png@1256w_452h_!web-article-pic.BwNz-oh1.webp",ce="/AINotes/assets/a4ab14af223616859628b94cbab34cff863a894d.png@1256w_1140h_!web-article-pic.9m-jH-56.webp",be="/AINotes/assets/d21c5edd82feb73cc052088bafff813509041fd8.png@1256w_900h_!web-article-pic.XFBe1k1E.webp",de="/AINotes/assets/ac0a4cccc02ce652ce21a7dc033e442d9a6432af.png@1256w_1764h_!web-article-pic.9hW5yumi.webp",ue="/AINotes/assets/002a71dbe4a89cf4957a34de04a8e04e6e0ae394.png@1256w_640h_!web-article-pic.DSyglFp9.webp",he="/AINotes/assets/3953e3933abf5364c90004cfb6565ea95e7b0c25.png@1256w_810h_!web-article-pic.Xj39KLkf.webp",fe="/AINotes/assets/5c56016f9c8b724ff2a97111be8e33dde51ee518.png@1256w_810h_!web-article-pic.DnErfaHh.webp",me="/AINotes/assets/84108efef5a641247740592e7635364acf223101.png@1256w_786h_!web-article-pic.BOgSibJi.webp",ge="/AINotes/assets/108883d14ad6dcdc506c5558a5ad90675f3bb206.png@!web-article-pic.BMF6FTVg.webp",_e="/AINotes/assets/7e3b4ae16206aaa017a3c9f084478926400014fe.png@1256w_814h_!web-article-pic.CmNEt9hP.webp",we="/AINotes/assets/30a2713ead152200e15ce86aaf2567c99c27f6c6.png@1256w_704h_!web-article-pic.DrpPPUZH.webp",ye="/AINotes/assets/dae97b3bb55870cd53ad2cf32bc8b5b001ab82c5.png@1256w_728h_!web-article-pic.ByVB24bt.webp",Ae="/AINotes/assets/2c18ff6fe566ad5127b5f73fcb3cea2b9a107013.png@1256w_502h_!web-article-pic.Dbfmd0m_.webp",ke="/AINotes/assets/bdd5223b128880cfcf1a0391e0c066f874503656.png@1256w_730h_!web-article-pic.ew4m8KIZ.webp",Be="/AINotes/assets/6a35b0d183f524df92ba668671f108a9ed351459.png@1256w_736h_!web-article-pic.f3VbfIC1.webp",Ce="/AINotes/assets/5a216910102e2d58d926ad78a4e7b1b8d7f09e06.png@1256w_786h_!web-article-pic.D5ivoPje.webp",Me=JSON.parse('{"title":"Stable Diffusion部署","description":"","frontmatter":{},"headers":[],"relativePath":"Document/AI绘画工具/Stable Diffusion 开源AI绘画工具/3.Stable Diffusion部署.md","filePath":"Document/AI绘画工具/Stable Diffusion 开源AI绘画工具/3.Stable Diffusion部署.md","lastUpdated":1708941732000}'),ve={name:"Document/AI绘画工具/Stable Diffusion 开源AI绘画工具/3.Stable Diffusion部署.md"},qe=t('<h1 id="stable-diffusion部署" tabindex="-1">Stable Diffusion部署 <a class="header-anchor" href="#stable-diffusion部署" aria-label="Permalink to &quot;Stable Diffusion部署&quot;">​</a></h1><p>亚马逊云免费领一年主机部署Stable Diffusion：<a href="https://mic.arcdmi.com/url/09" target="_blank" rel="noreferrer">https://mic.arcdmi.com/url/09</a></p><p><strong>【Stable Diffusion三种安装方式，Win+Mac一个教程讲明白】</strong> <a href="https://www.bilibili.com/video/BV1jN411a7Sx/?share_source=copy_web&amp;vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1jN411a7Sx/?share_source=copy_web&amp;vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><h2 id="stable-diffusion-电脑配置推荐" tabindex="-1">Stable Diffusion 电脑配置推荐 <a class="header-anchor" href="#stable-diffusion-电脑配置推荐" aria-label="Permalink to &quot;Stable Diffusion 电脑配置推荐&quot;">​</a></h2><p><a href="https://docs.qq.com/sheet/DRU9ydUR3TmNWeWdE?tab=BB08J2" target="_blank" rel="noreferrer">SD推荐电脑配置 (qq.com)</a></p><ul><li><em>▢</em> 基础配置 / 5500元</li><li><em>▢</em> 进阶配置 / 9000元</li><li><em>▢</em> 性价比配置 / 10000元</li><li><em>▢</em> 高级配置 / 14000元</li></ul><p>电脑配置需求</p><p>操作系统：windows10以后</p><p>CPU：不做强制性要求</p><p>内存：推荐8G以上</p><p>显卡：必须是Nvidia的独立显卡，显存最低4G，推荐20系以后</p><p>A卡核显只能用CPU跑整合包，推荐放在固态硬盘中，提升模型加载速度</p><p><strong>所需配置</strong>：</p><p>推荐配置：拥有Nvidia独立显卡、RTX20系以后的显卡。仅生成图片推荐8G显存（4G是最低保障配置）训练推荐大于12G（越大越好）</p><p>内存推荐16G及以上。</p><p>硬盘推荐使用固态硬盘500G以上，否则你开软件要等个5-10分钟。</p><p>CPU不做太多要求。</p><p>A卡能不能用？能，但是性能损耗很大。可以在Linux系统上获得最佳效果，但是由于我本人没有A卡，所以我也不会做相关的教程</p><h2 id="stable-diffusion-开源ui项目" tabindex="-1">Stable Diffusion 开源UI项目 <a class="header-anchor" href="#stable-diffusion-开源ui项目" aria-label="Permalink to &quot;Stable Diffusion 开源UI项目&quot;">​</a></h2><p><strong>stable-diffusion-webui</strong>：<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui" target="_blank" rel="noreferrer">AUTOMATIC1111/stable-diffusion-webui: Stable Diffusion web UI (github.com)</a></p><ul><li>最出名的stable-diffusion的UI项目</li></ul><p><strong>sd-webui-segment-anything</strong>：<a href="https://github.com/continue-revolution/sd-webui-segment-anything" target="_blank" rel="noreferrer">continue-revolution/sd-webui-segment-anything: Segment Anything for Stable Diffusion WebUI (github.com)</a></p><ul><li>此扩展旨在将 <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui" target="_blank" rel="noreferrer">AUTOMATIC1111 稳定扩散 WebUI</a> 和 <a href="https://github.com/Mikubill/sd-webui-controlnet" target="_blank" rel="noreferrer">Mikubill</a> ControlNet 扩展与<a href="https://github.com/facebookresearch/segment-anything/" target="_blank" rel="noreferrer">分段任何东西</a>和<a href="https://github.com/IDEA-Research/GroundingDINO" target="_blank" rel="noreferrer">接地DINO</a>连接起来，以增强稳定扩散/控制网修复、增强 ControlNet 语义分割、自动化图像消光并创建 LoRA/LyCORIS 训练集。</li></ul><p><strong>sygil-webui</strong>：<a href="https://github.com/Sygil-Dev/sygil-webui" target="_blank" rel="noreferrer">Sygil-Dev/sygil-webui: Stable Diffusion web UI (github.com)</a></p><ul><li>基于 Web 的 UI 实现Stable Diffusion</li></ul><p><strong>Webui colab</strong>：<a href="https://github.com/camenduru/stable-diffusion-webui-colab" target="_blank" rel="noreferrer">camenduru/stable-diffusion-webui-colab: stable diffusion webui colab (github.com)</a></p><ul><li>哈</li></ul><p><strong>ComfyUI框架</strong>：<a href="https://github.com/comfyanonymous/ComfyUI" target="_blank" rel="noreferrer">https://github.com/comfyanonymous/ComfyUI</a></p><ul><li>待定</li></ul><p><strong>diffusers框架</strong>：<a href="https://github.com/huggingface/diffusers" target="_blank" rel="noreferrer">https://github.com/huggingface/diffusers</a></p><ul><li>待定2</li></ul><p><strong>InvokeAI</strong>：<a href="https://github.com/invoke-ai/InvokeAI" target="_blank" rel="noreferrer">invoke-ai/InvokeAI: InvokeAI is a leading creative engine for Stable Diffusion models, empowering professionals, artists, and enthusiasts to generate and create visual media using the latest AI-driven technologies. The solution offers an industry leading WebUI, supports terminal use through a CLI, and serves as the foundation for multiple commercial products. (github.com)</a></p><ul><li>InvokeAI 是Stable Diffusion的领先创意引擎，使专业人士、艺术家和爱好者能够使用最新的 AI 驱动技术生成和创建视觉媒体。该解决方案提供行业领先的WebUI，通过CLI支持终端使用，并作为多个商业产品的基础。</li></ul><h2 id="本地运行部署项目-以【秋葉aaaki】的整合包为例" tabindex="-1">本地运行部署项目：以【秋葉aaaki】的整合包为例 <a class="header-anchor" href="#本地运行部署项目-以【秋葉aaaki】的整合包为例" aria-label="Permalink to &quot;本地运行部署项目：以【秋葉aaaki】的整合包为例&quot;">​</a></h2><p>参考：<a href="https://juejin.cn/post/7239279470250885175" target="_blank" rel="noreferrer">手把手教你本地部署Stable Diffusion AI绘画 - 掘金 (juejin.cn)</a></p><p>教程：<a href="https://www.bilibili.com/video/BV1fa4y1G71W/" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1fa4y1G71W/</a></p><p>上面链接下载完后，共有三类文件：</p><ul><li><code>sd-webui-aki-v4.2.rar</code> 压缩包：主程序启动包</li><li><code>可选controlnet1.1</code>文件夹：模型和预处理器</li><li><code>启动器运行依赖-dotnet-6.0.11.exe</code> ：需要先双击这个，安装整合包需要的依赖</li></ul><p>1.把<code>sd-webui-aki-v4.2.rar</code>压缩包解压</p><p>2.然后把 <code>可选controlnet1.1</code> 文件夹的 <code>模型</code> 文件夹内的模型文件复制到 文件夹：<code>sd-webui-aki\\sd-webui-aki-v4.2\\models\\ControlNet</code></p><p>3.再把 <code>可选controlnet1.1</code> 文件夹的 <code>预处理器</code> 文件夹内的 <code>downloads</code> 文件夹复制到 文件夹：<code>sd-webui-aki\\sd-webui-aki-v4.2\\extensions\\sd-webui-controlnet\\annotator</code>内覆盖</p><p>4.启动：双击<code>sd-webui-aki\\sd-webui-aki-v4.2</code> 内的 <code>A启动器.exe</code> 文件启动软件</p><p>5.一键启动：点击界面的【一键启动】，会启动一个浏览器实例，便可以开始绘图了</p><h3 id="绘制第一张图" tabindex="-1">绘制第一张图 <a class="header-anchor" href="#绘制第一张图" aria-label="Permalink to &quot;绘制第一张图&quot;">​</a></h3><h4 id="_1-提示词" tabindex="-1">1.提示词 <a class="header-anchor" href="#_1-提示词" aria-label="Permalink to &quot;1.提示词&quot;">​</a></h4><p>正向提示词</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">masterpiece,best</span><span style="color:#98C379;"> quality,</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>反向提示词</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">lowres,bad</span><span style="color:#98C379;"> anatomy,bad</span><span style="color:#98C379;"> hands,text,error,missing</span><span style="color:#98C379;"> fingers,extra</span><span style="color:#98C379;"> digit,fewer</span><span style="color:#98C379;"> digits,cropped,worst</span><span style="color:#98C379;"> quality,low</span><span style="color:#98C379;"> quality,normal</span><span style="color:#98C379;"> quality,jpeg</span><span style="color:#98C379;"> artifacts,signature,watermark,username,blurry</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>正向反向提示词，如果要加大提示词比重，(word:1.5) - 将权重提高 1.5 倍</p><h4 id="_2-采样和迭代步数" tabindex="-1">2.采样和迭代步数 <a class="header-anchor" href="#_2-采样和迭代步数" aria-label="Permalink to &quot;2.采样和迭代步数&quot;">​</a></h4><p><img src="'+o+'" alt="img"></p><ul><li><p><strong>Sampler（采样器/采样方法）</strong></p><ul><li><p>Euler a（Eular ancestral）可以以较少的步数产生很大的多样性，不同的步数可能有不同的结果。</p></li><li><p>DPM 相关的采样器通常具有不错的效果，但耗时也会相应增加。</p></li><li><p>Euler 是最简单、最快的</p></li><li><p>Euler a 更多样，不同步数可以生产出不同的图片。但是太高步数 (&gt;30) 效果不会更好。</p></li><li><p>DDIM 收敛快，但效率相对较低，因为需要很多 step 才能获得好的结果，适合在重绘时候使用。</p></li><li><p>LMS 是 Euler 的衍生，它们使用一种相关但稍有不同的方法（平均过去的几个步骤以提高准确性）。大概 30 step 可以得到稳定结果</p></li><li><p>PLMS 是 Euler 的衍生，可以更好地处理神经网络结构中的奇异性。</p></li><li><p>DPM2 是一种神奇的方法，它旨在改进 DDIM，减少步骤以获得良好的结果。它需要每一步运行两次去噪，它的速度大约是 DDIM 的两倍，生图效果也非常好。但是如果你在进行调试提示词的实验，这个采样器可能会有点慢了。</p></li><li><p>UniPC 效果较好且速度非常快，对平面、卡通的表现较好，推荐使用。</p></li><li><p>推荐 Euler a ，DPM2++2M Karras，DPM2++SDE Karras</p></li></ul></li><li><p><strong>迭代步数</strong></p><ul><li>Stable Diffusion 的工作方式是从以随机高斯噪声起步，向符合提示的图像一步步降噪接近。随着步数增多，可以得到对目标更小、更精确的图像。但增加步数也会增加生成图像所需的时间。增加步数的边际收益递减，取决于采样器。一般开到 20~30。</li></ul></li></ul><h4 id="_3-修复和图片相关设置" tabindex="-1">3.修复和图片相关设置 <a class="header-anchor" href="#_3-修复和图片相关设置" aria-label="Permalink to &quot;3.修复和图片相关设置&quot;">​</a></h4><p><img src="'+l+'" alt="img"></p><ul><li><strong>高清修复</strong> 默认情况下，文生图在高分辨率下会生成非常混沌的图像。如果使用高清修复，会型首先按照指定的尺寸生成一张图片，然后通过放大算法将图片分辨率扩大，以实现高清大图效果。最终尺寸为（原分辨率*缩放系数 Upscale by)。</li><li><strong>面部修复</strong> 修复画面中人物的面部，但是非写实风格的人物开启面部修复可能导致面部崩坏。</li><li><strong>放大算法中</strong>，Latent 在许多情况下效果不错，但重绘幅度小于 0.5 后就不甚理想。ESRGAN_4x、SwinR 4x 对 0.5 以下的重绘幅度有较好支持。</li><li><strong>Hires step</strong> 表示在进行这一步时计算的步数。</li><li><strong>Denoising strength</strong> 字面翻译是降噪强度，表现为最后生成图片对原始输入图像内容的变化程度。该值越高，放大后图像就比放大前图像差别越大。低 denoising 意味着修正原图，高 denoising 就和原图就没有大的相关性了。一般来讲阈值是 0.7 左右，超过 0.7 和原图基本上无关，0.3 以下就是稍微改一些。实际执行中，具体的执行步骤为 Denoising strength * Sampling Steps。</li><li><strong>CFG Scale（提示词相关性）</strong> 图像与你的提示的匹配程度。增加这个值将导致图像更接近你的提示，但它也在一定程度上降低了图像质量。 可以用更多的采样步骤来抵消。过高的 CFG Scale 体现为粗犷的线条和过锐化的图像。一般开到 7~11。 CFG Scale 与采样器之间的关系：</li><li><strong>生成批次</strong> 每次生成图像的组数。一次运行生成图像的数量为“批次* 批次数量”。</li><li><strong>每批数量</strong> 同时生成多少个图像。增加这个值可以提高性能，但也需要更多的显存。大的 Batch Size 需要消耗巨量<strong>显存</strong>。若没有超过 12G 的显存，请保持为 1。</li><li><strong>尺寸</strong> 指定图像的长宽。出图尺寸太宽时，图中可能会出现多个主体。1024 之上的尺寸可能会出现不理想的结果，推荐使用小尺寸分辨率+高清修复（Hires fix)。</li><li><strong>种子</strong> 种子决定模型在生成图片时涉及的所有随机性，它初始化了 Diffusion 算法起点的初始值。 理论上，在应用完全相同参数（如 Step、CFG、Seed、prompts）的情况下，生产的图片应当完全相同。</li></ul><p><strong>后续</strong>：<a href="https://zhuanlan.zhihu.com/p/629493288" target="_blank" rel="noreferrer">stable diffusion 小白最全详细使用教程 - 知乎 (zhihu.com)</a></p><h3 id="街头少女" tabindex="-1">街头少女 <a class="header-anchor" href="#街头少女" aria-label="Permalink to &quot;街头少女&quot;">​</a></h3><p>描述主题如下：一个女孩在街头大笑，湿透的，辫子，写实风格的，电影级别的，HDR的。</p><ul><li>Lora：无</li><li>Embeddings:ng_deepnegative_v1_75t [1a3e]</li></ul><h4 id="prompt" tabindex="-1">Prompt <a class="header-anchor" href="#prompt" aria-label="Permalink to &quot;Prompt&quot;">​</a></h4><blockquote><p>a young woman, street, laughing, ponytails, (hdr:1.3), (muted colors:1.2), dramatic, complex background, cinematic, filmic, (rutkowski, artstation:0.8), soaking wet,</p></blockquote><h4 id="negative-prompt" tabindex="-1">Negative Prompt <a class="header-anchor" href="#negative-prompt" aria-label="Permalink to &quot;Negative Prompt&quot;">​</a></h4><blockquote><p>(nsfw:2),Multiple people,easynegative,(worst quality:2),(low quality:2),lowres,(monochrome:1.4),(grayscale:1.4),big head,severed legs,short legs,missing legs,acnes,skin blemishes,age spot,backlight,(ugly:1.4),(duplicate:1.4),(morbid:1.2),(mutilated:1.2),mutated hands,(poorly drawn hands:1.4),blurry, (bad anatomy:1.4),(bad proportions:1.4),(disfigured:1.4),(unclear eyes:1.4),bad hands, bad tooth,missing fingers,extra digit,bad body,NG_DeepNegative_V1_75T,glans,EasyNegative:0.5,gross proportions.short arm,(missing arms:1.4),missing thighs,missing calf,mutation,duplicate,morbid,mutilated,poorly drawn cloth,strange finger,bad finger,(mutated hands and fingers:1.4),(text:1.4), bad-artist, bad_prompt_version2, bad-hands-5, bad-image-v2-39000,</p></blockquote><h4 id="基础配置" tabindex="-1">基础配置 <a class="header-anchor" href="#基础配置" aria-label="Permalink to &quot;基础配置&quot;">​</a></h4><p><img src="'+n+'" alt="image.png"></p><p>—————————————————————————————————————— <a href="https://juejin.cn/post/7246960365736345660" target="_blank" rel="noreferrer">AI 绘画工具 Stable Diffusion 本地安装使用 - 掘金 (juejin.cn)</a></p><h2 id="以automatic1111-stable-diffusion-webui项目搭建" tabindex="-1">以AUTOMATIC1111/stable-diffusion-webui项目搭建 <a class="header-anchor" href="#以automatic1111-stable-diffusion-webui项目搭建" aria-label="Permalink to &quot;以AUTOMATIC1111/stable-diffusion-webui项目搭建&quot;">​</a></h2><h3 id="_1、下载项目" tabindex="-1">1、下载项目 <a class="header-anchor" href="#_1、下载项目" aria-label="Permalink to &quot;1、下载项目&quot;">​</a></h3><p><code>stable-diffusion-webui</code> 没有发布可执行程序（比如：<code>.exe</code>），我们需要通过 <code>git</code> 的方式将整个工程源码拉下来运行：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>注：这个开源项目目前的更新频率很快，会不定期的修复一些 bug 或加入一些新功能，所以建议可以时常 <code>git pull</code> 拉取最新代码。</p></blockquote><h3 id="_2、python-环境" tabindex="-1">2、Python 环境 <a class="header-anchor" href="#_2、python-环境" aria-label="Permalink to &quot;2、Python 环境&quot;">​</a></h3><p><code>stable-diffusion-webui</code> 主要是使用 Python 开发的，所以运行这个工程，需要安装一下 Python 环境并配置好环境变量，因为 Python 环境的安装很简单，这里就不多说了，环境配置完成之后，可以通过以下命令查看 Python 的版本号，验证环境是否正常：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">python</span><span style="color:#D19A66;"> --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><blockquote><p>注意：官方推荐安装 <code>Python 3.10.6</code> 版本</p></blockquote><p>另外，建议使用 <code>Anaconda</code> 管理多个 Python 环境，详见</p><ul><li>官方的 conda 环境安装说明：<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui/wiki/Install-and-Run-on-NVidia-GPUs#alternative-installation-on-windows-using-conda" target="_blank" rel="noreferrer">Install and Run on NVidia GPUs · AUTOMATIC1111/stable-diffusion-webui Wiki (github.com)</a></li><li>anaconda 常用命令：<a href="https://blog.csdn.net/ligous/article/details/124209700" target="_blank" rel="noreferrer">anaconda常用命令_anaconda命令_ligous的博客-CSDN博客</a></li></ul><h3 id="_3、cuda-环境" tabindex="-1">3、CUDA 环境 <a class="header-anchor" href="#_3、cuda-环境" aria-label="Permalink to &quot;3、CUDA 环境&quot;">​</a></h3><p>默认 <code>stable-diffusion-webui</code> 运行使用的是 GPU 算力，也就是说需要用到 Nvidia 显卡（配置越高，绘图越快）。这里我们需要安装 CUDA 驱动，先确定一下电脑能安装的 CUDA 版本，桌面右下角-&gt;右键 NVIDIA 设置图标-&gt;NVIDIA 控制面板：</p><p><img src="'+i+'" alt="img"></p><p>可以看到我的电脑的显示的是 <code>NVIDIA CUDA 11.6.134 driver</code>，所以我的电脑要安装的 CUDA 版本不能超过 11.6。</p><blockquote><p>注意：高版本显卡是可以安装低版本的 CUDA 驱动的，比如我也可以安装经典的 10.2 版本，但是安装 11.6 版本可以获得更高的 GPU 运行效率，所以一般来说推荐安装显卡支持的最高 CUDA 版本。</p></blockquote><p>在下面的网址中找到对应的 CUDA 版本进行安装：</p><ul><li>CUDA 官方归档：<a href="https://developer.nvidia.com/cuda-toolkit-archive" target="_blank" rel="noreferrer">developer.nvidia.com/cuda-toolkit-archive</a></li></ul><p><img src="'+r+'" alt="img"></p><p>直接选择 &quot;精简&quot; 安装就可以了，安装完成之后，可以使用如下命令查看 CUDA 版本，来验证 CUDA 是否安装成功：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">nvcc</span><span style="color:#D19A66;"> --version</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><img src="'+p+'" alt="img"></p><blockquote><p>注：如果你没有 Nvidia 显卡，也可以通过给 <code>stable-diffusion-webui</code> 指定运行参数 <code>--use-cpu sd</code>，让其使用 CPU 算力运行，但是非常不建议你这么做，CPU 算力跟 GPU 算力相比简直天差地别，可能 GPU 只需要 10 秒就能绘制完成，而 CPU 却要 10 分钟，这不是开玩笑的。另外，如果你的显卡内存不多，建议 4G 的显卡加上 <code>--medvram</code> 启动参数，2G 的显卡加上 <code>--lowvram</code> 启动参数。怎么配置启动参数我们后面说。</p></blockquote><h3 id="_4、启动项目" tabindex="-1">4、启动项目 <a class="header-anchor" href="#_4、启动项目" aria-label="Permalink to &quot;4、启动项目&quot;">​</a></h3><p>在安装配置好运行环境之后，直接运行工程下的 <code>webui-user.bat</code> 文件即可（如果是类 Unix 系统，则运行 <code>webui-user.sh</code>）。</p><p>首次启动会自动下载一些 Python 依赖库（具体哪些库请看工程下的 <code>requirements.txt</code>） ，以及项目需要用到的配置和模型文件（比如：<code>v1-5-pruned-emaonly.safetensors</code>，将近 4 个 G~），初始化一次之后，下次启动就快了。</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">Launching</span><span style="color:#98C379;"> Web</span><span style="color:#98C379;"> UI</span><span style="color:#98C379;"> with</span><span style="color:#98C379;"> arguments:</span></span>\n<span class="line"><span style="color:#56B6C2;">...</span></span>\n<span class="line"><span style="color:#61AFEF;">Running</span><span style="color:#98C379;"> on</span><span style="color:#98C379;"> local</span><span style="color:#98C379;"> URL:</span><span style="color:#98C379;">  http://127.0.0.1:7860</span></span>\n<span class="line"><span style="color:#61AFEF;">To</span><span style="color:#98C379;"> create</span><span style="color:#98C379;"> a</span><span style="color:#98C379;"> public</span><span style="color:#98C379;"> link,</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> `</span><span style="color:#E06C75;">share</span><span style="color:#56B6C2;">=</span><span style="color:#98C379;">True` </span><span style="color:#C678DD;">in</span><span style="color:#61AFEF;"> `launch</span><span style="color:#98C379;">()`.</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>看到这个提示就说明成功运行起来了，打开网址就可以看到程序的运行界面了：</p><p><img src="'+c+`" alt="img"></p><blockquote><p>温馨提示：该项目是英文页面，可以使用浏览器的翻译功能转成中文来使用~</p></blockquote><h2 id="linux上如何使用stable-diffusion-webui" tabindex="-1">Linux上如何使用Stable Diffusion WebUI <a class="header-anchor" href="#linux上如何使用stable-diffusion-webui" aria-label="Permalink to &quot;Linux上如何使用Stable Diffusion WebUI&quot;">​</a></h2><h3 id="前提条件" tabindex="-1">前提条件 <a class="header-anchor" href="#前提条件" aria-label="Permalink to &quot;前提条件&quot;">​</a></h3><ul><li>已安装CUDA</li><li>已安装git</li><li>已安装Anaconda <ul><li>直接安装Anaconda。</li><li>虽然Linux自带的Python，但是缺胳膊少腿，所以不要指望Linux自带的Python。</li></ul></li></ul><h3 id="捣鼓好stable-diffusion-webui需要的环境" tabindex="-1">捣鼓好Stable Diffusion WebUI需要的环境 <a class="header-anchor" href="#捣鼓好stable-diffusion-webui需要的环境" aria-label="Permalink to &quot;捣鼓好Stable Diffusion WebUI需要的环境&quot;">​</a></h3><p>创建并激活进入虚拟环境：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">conda</span><span style="color:#98C379;"> create</span><span style="color:#D19A66;"> -n</span><span style="color:#98C379;"> webui</span><span style="color:#98C379;"> python=</span><span style="color:#D19A66;">3.10</span><span style="color:#98C379;">.6</span></span>
<span class="line"><span style="color:#61AFEF;">conda</span><span style="color:#98C379;"> activate</span><span style="color:#98C379;"> webui</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>成功进入虚拟环境之后就可以开搞了。</p><h3 id="下载stable-diffusion-webui" tabindex="-1">下载Stable Diffusion WebUI <a class="header-anchor" href="#下载stable-diffusion-webui" aria-label="Permalink to &quot;下载Stable Diffusion WebUI&quot;">​</a></h3><p>从github上下载，终端中输入：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>进入文件夹：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> stable-diffusion-webui</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>为了减少你的麻烦，请做好以下几个<strong>铺垫步骤</strong>：</p><h4 id="pip换源" tabindex="-1">pip换源 <a class="header-anchor" href="#pip换源" aria-label="Permalink to &quot;pip换源&quot;">​</a></h4><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">pip</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> global.index-url</span><span style="color:#ABB2BF;"> &lt;</span><span style="color:#98C379;">http://mirrors.aliyun.com/pypi/simple</span><span style="color:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="color:#61AFEF;">pip</span><span style="color:#98C379;"> config</span><span style="color:#98C379;"> set</span><span style="color:#98C379;"> global.trusted-host</span><span style="color:#98C379;"> mirrors.aliyun.com</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><blockquote><p><strong>笔者提示：</strong> 安装过程中可能会遇到奇怪的问题，<strong>一般都是网络造成的</strong>，很大一部分是pip源造成的。</p><p>我搭的时候弄得阿里云源，疯狂报错。搭的时候用的清华源，一下就成功了。</p><p>我又配另一个服务器，阿里云全部成功。我俩复盘了一下，就是当时网络的问题。所以阿里云源不好使，多换几个别的。</p></blockquote><h4 id="修改lunch-py" tabindex="-1">修改lunch.py <a class="header-anchor" href="#修改lunch-py" aria-label="Permalink to &quot;修改lunch.py&quot;">​</a></h4><p>找到下面这段代码，给每个github地址前边都加上：<a href="https://ghproxy.com/" target="_blank" rel="noreferrer">GitHub Proxy 代理加速 (ghproxy.com)</a></p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#C678DD;">def</span><span style="color:#61AFEF;"> prepare_environment</span><span style="color:#ABB2BF;">():</span></span>
<span class="line"><span style="color:#C678DD;">    global</span><span style="color:#ABB2BF;"> skip_install</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    torch_command </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;TORCH_COMMAND&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;pip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 --extra-index-url https://download.pytorch.org/whl/cu117&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    requirements_file </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;REQS_FILE&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;requirements_versions.txt&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    commandline_args </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;COMMANDLINE_ARGS&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    xformers_package </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;XFORMERS_PACKAGE&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;xformers==0.0.16rc425&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    gfpgan_package </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;GFPGAN_PACKAGE&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;git+https://github.com/TencentARC/GFPGAN.git@8d2447a2d918f8eba5a4a01463fd48e45126a379&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    clip_package </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;CLIP_PACKAGE&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;git+https://github.com/openai/CLIP.git@d50d76daa670286dd6cacf3bcd80b5e4823fc8e1&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    openclip_package </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;OPENCLIP_PACKAGE&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;git+https://github.com/mlfoundations/open_clip.git@bb6e834e9c70d9c27d0dc3ecedeebeaeb1ffad6b&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#ABB2BF;">    stable_diffusion_repo </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;STABLE_DIFFUSION_REPO&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;https://github.com/Stability-AI/stablediffusion.git&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    taming_transformers_repo </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;TAMING_TRANSFORMERS_REPO&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;https://github.com/CompVis/taming-transformers.git&quot;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    k_diffusion_repo </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;K_DIFFUSION_REPO&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;https://github.com/crowsonkb/k-diffusion.git&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    codeformer_repo </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;CODEFORMER_REPO&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;https://github.com/sczhou/CodeFormer.git&#39;</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#ABB2BF;">    blip_repo </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> os.environ.</span><span style="color:#61AFEF;">get</span><span style="color:#ABB2BF;">(</span><span style="color:#98C379;">&#39;BLIP_REPO&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;https://github.com/salesforce/BLIP.git&#39;</span><span style="color:#ABB2BF;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><p><strong>笔者提示：</strong> 刚才说安装过程中可能会遇到奇怪的问题，<strong>一般都是网络造成的</strong>，另一个原因就是从github下载东西的时候失败，所以这里直接加个代理省事。用梯子也不好使。</p><h4 id="下载默认模型" tabindex="-1">下载默认模型 <a class="header-anchor" href="#下载默认模型" aria-label="Permalink to &quot;下载默认模型&quot;">​</a></h4><blockquote><p><strong>笔者提示：</strong> 这一步不是必须的，webui.sh会自动运行下载的，但是我用服务器下的巨慢，所以手动下的。</p></blockquote><p>下载：<a href="https://huggingface.co/runwayml/stable-diffusion-v1-5/resolve/main/v1-5-pruned-emaonly.safetensors" target="_blank" rel="noreferrer">https://huggingface.co/runwayml/stable-diffusion-v1-5/resolve/main/v1-5-pruned-emaonly.safetensors</a>，放到 <code>stable-diffusion-webui/models/Stable-diffusion/</code> 里</p><h3 id="使用webui" tabindex="-1">使用webui <a class="header-anchor" href="#使用webui" aria-label="Permalink to &quot;使用webui&quot;">​</a></h3><p>终端输入启动webui：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">bash</span><span style="color:#98C379;"> webui.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>出现URL就是成功！</strong> 点击链接用浏览器打开。</p><h3 id="部分报错处理方法" tabindex="-1">部分报错处理方法 <a class="header-anchor" href="#部分报错处理方法" aria-label="Permalink to &quot;部分报错处理方法&quot;">​</a></h3><p>一般都是网络问题，方法就是<strong>找到Traceback里边的Command，重新给它换个别的国内源</strong>，阿里云不行换清华、豆瓣等等。</p><ol><li><p>RuntimeError</p><blockquote><p>RuntimeError: Couldn&#39;t install torch.</p><p>Command: &quot;/home/Ann/stable-diffusion-webui/venv/bin/python3&quot; -m pip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 --extra-index-url <a href="https://download.pytorch.org/whl/cu117" target="_blank" rel="noreferrer">download.pytorch.org/whl/cu117</a></p><p>Error code: 2</p></blockquote><p>下载源有问题，看一下你换源了么？已经换源的话不好使，那就再试一下别的源。</p><p>把<code>command</code>后边那块复制下来，改一改：</p><blockquote><p>pip install torch==1.13.1+cu117 torchvision==0.14.1+cu117 --trusted-host mirrors.aliyun.com --extra-index-url <a href="https://download.pytorch.org/whl/cu117" target="_blank" rel="noreferrer">download.pytorch.org/whl/cu117</a> -i <code>别的源的地址</code></p></blockquote></li><li><p>Preparing metadata (setup.py) ... error</p><blockquote><p>subprocess.CalledProcessError: Command &#39;[&#39;/home/Ann/stable-diffusion-webui/venv/bin/python3&#39;, &#39;-m&#39;, &#39;pip&#39;, &#39;--disable-pip-version-check&#39;, &#39;wheel&#39;, &#39;--no-deps&#39;, &#39;-w&#39;, &#39;/tmp/tmpmlg_i0y8&#39;, &#39;--quiet&#39;, &#39;cython&#39;]&#39; returned non-zero exit status 2.</p><p>distutils.errors.DistutilsError: Command &#39;[&#39;/home/Ann/stable-diffusion-webui/venv/bin/python3&#39;, &#39;-m&#39;, &#39;pip&#39;, &#39;--disable-pip-version-check&#39;, &#39;wheel&#39;, &#39;--no-deps&#39;, &#39;-w&#39;, &#39;/tmp/tmpmlg_i0y8&#39;, &#39;--quiet&#39;, &#39;cython&#39;]&#39; returned non-zero exit status 2.</p></blockquote><p>还是看<code>Command</code>。报错转化出来是这个命令：</p><blockquote><p>&quot;/home/Ann/stable-diffusion-webui/venv/bin/python3&quot; -m pip --disable-pip-version-check wheel --no-deps -w /tmp/tmpmlg_i0y8 --quiet cython</p></blockquote><p>表示在使用 pip 安装 cython 时，生成了一个 Wheel 文件。</p><ul><li>其中 <strong>/home/liuyx169/stable-diffusion-webui/venv/bin/python3</strong> 表示使用指定的 Python 解释器来执行 pip 命令。</li><li><strong>-m pip</strong> 表示使用 pip 模块来执行命令。</li><li><strong>--disable-pip-version-check</strong> 表示禁用 pip 版本检查</li><li><strong>wheel</strong> 表示使用 Wheel 格式打包安装包</li><li><strong>--no-deps</strong> 表示不安装依赖包</li><li><strong>-w /tmp/tmpmlg_i0y8</strong> 表示将生成的 Wheel 文件放置在指定的目录下</li><li><strong>--quiet</strong> 表示以安静模式运行，不输出详细信息</li><li><strong>cython</strong> 表示要安装的 Python 包的名称。</li></ul><p>归根结底还是在安装cythom这个包的时候没装上，还是网的问题。</p><p>如果你确定换源了，那解决方法还是再换个源手动装一下：</p><blockquote><p>pip install cython -i <strong>别的源的地址</strong> --disable-pip-version-check wheel --no-deps</p></blockquote></li><li><p>pip._vendor.urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host=&#39;files.pythonhosted.org&#39;, port=443): Read timed out.</p><p>还是源的问题。找到Traceback里边的Command再换个源。</p></li><li><p>The TLS connection was non-properly terminated.</p><blockquote><p>fatal: unable to access &#39;<a href="https://github.com/TencentARC/GFPGAN.git/" target="_blank" rel="noreferrer">github.com/TencentARC</a>&#39;: gnutls_handshake() failed: The TLS connection was non-properly terminated. error: subprocess-exited-with-error</p></blockquote><p>出现这个问题，回去看一下你的launch.py改对了么？确定给launch.py所有的github地址前边都加上<a href="https://ghproxy.com/" target="_blank" rel="noreferrer">ghproxy.com/</a> 即可。</p></li></ol><h2 id="全端搭建教程" tabindex="-1">全端搭建教程 <a class="header-anchor" href="#全端搭建教程" aria-label="Permalink to &quot;全端搭建教程&quot;">​</a></h2><p><a href="https://juejin.cn/post/7214288126222204988" target="_blank" rel="noreferrer">使用 ChatGPT、Stable Diffusion、React 和 NodeJS 🤯 构建一个网站LOGO - 掘金 (juejin.cn)</a></p><h2 id="在-mac-os-上安装-stable-diffusion" tabindex="-1">在 Mac OS 上安装 Stable Diffusion <a class="header-anchor" href="#在-mac-os-上安装-stable-diffusion" aria-label="Permalink to &quot;在 Mac OS 上安装 Stable Diffusion&quot;">​</a></h2><p><a href="https://juejin.cn/post/7241884241616339002" target="_blank" rel="noreferrer">使用Mochi Diffusion在Apple芯片Mac上使用Stable Diffusion - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7255936307100500029" target="_blank" rel="noreferrer">在男朋友的 Mac 上部署 Stable Diffusion（超详细，含踩坑点，AI 绘画入门保姆级教程） - 掘金 (juejin.cn)</a></p><p>开源项目：<a href="https://github.com/apple/ml-stable-diffusion" target="_blank" rel="noreferrer">apple/ml-stable-diffusion: Stable Diffusion with Core ML on Apple Silicon (github.com)</a></p><p>教程：【Mac上最好用的StableDiffusion客户端，Draw Things详细演示】 <a href="https://www.bilibili.com/video/BV1Nh4y1b7xk/" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1Nh4y1b7xk/</a>)</p><h3 id="实操环境" tabindex="-1">实操环境 <a class="header-anchor" href="#实操环境" aria-label="Permalink to &quot;实操环境&quot;">​</a></h3><p>macOS 13 Arm64（建议12以上的系统使用）</p><p>Apple M1</p><h3 id="一、安装-home-brew" tabindex="-1">一、安装 Home Brew <a class="header-anchor" href="#一、安装-home-brew" aria-label="Permalink to &quot;一、安装 Home Brew&quot;">​</a></h3><p><img src="`+b+'" alt="image"></p><p>在开始我们需要安装下 <a href="https://brew.sh/" target="_blank" rel="noreferrer">Home Brew</a>, 可以直接复制下面代码到终端并执行</p><p>下面是Homebrew官方给出的安装命令：（如果没有VPN，不要使用此命令安装！）</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">/bin/bash</span><span style="color:#D19A66;"> -c</span><span style="color:#98C379;"> &quot;$(</span><span style="color:#61AFEF;">curl</span><span style="color:#D19A66;"> -fsSL</span><span style="color:#98C379;"> https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>通常情况下，官网给出的指令会报错：</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">curl:</span><span style="color:#ABB2BF;"> (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>因为这是国外网站，由于GFW（中国长城防火墙）的存在，如果没有vpn，是无法访问的，所以连接被拒绝！</p><p>以下为国内安装Homebrew的正确姿势：(基于gitee上某大神的自动安装脚本)</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">/bin/zsh</span><span style="color:#D19A66;"> -c</span><span style="color:#98C379;"> &quot;$(</span><span style="color:#61AFEF;">curl</span><span style="color:#D19A66;"> -fsSL</span><span style="color:#98C379;"> https://gitee.com/cunkai/HomebrewCN/raw/master/Homebrew.sh)&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>————————————————————————————————————————</p><p>回车执行指令后，根据提示操作。具体包括以下提示操作：</p><h4 id="_1-选择下载镜像" tabindex="-1">1.选择下载镜像 <a class="header-anchor" href="#_1-选择下载镜像" aria-label="Permalink to &quot;1.选择下载镜像&quot;">​</a></h4><p>根据需要选择下载源，例如，我这里选择中科大下载源，就输入‘1’，回车。</p><h4 id="_2-确认删除旧版本" tabindex="-1">2.确认删除旧版本 <a class="header-anchor" href="#_2-确认删除旧版本" aria-label="Permalink to &quot;2.确认删除旧版本&quot;">​</a></h4><p>如果存在旧版本，会弹出删除旧版本提示，输入&quot;Y&quot;，回车。</p><h4 id="_3-输入开机密码-用于mac确认第三方应用安装" tabindex="-1">3.输入开机密码（用于mac确认第三方应用安装） <a class="header-anchor" href="#_3-输入开机密码-用于mac确认第三方应用安装" aria-label="Permalink to &quot;3.输入开机密码（用于mac确认第三方应用安装）&quot;">​</a></h4><h4 id="_4-回车跳过即可" tabindex="-1">4.回车跳过即可 <a class="header-anchor" href="#_4-回车跳过即可" aria-label="Permalink to &quot;4.回车跳过即可&quot;">​</a></h4><h4 id="_5-安装成功配置以后的镜像源选择" tabindex="-1">5.安装成功配置以后的镜像源选择 <a class="header-anchor" href="#_5-安装成功配置以后的镜像源选择" aria-label="Permalink to &quot;5.安装成功配置以后的镜像源选择&quot;">​</a></h4><h4 id="_6-重启终端或者运行source-users-xixi-zprofile-让brew生效" tabindex="-1">6.重启终端或者运行source /Users/xixi/.zprofile 让brew生效 <a class="header-anchor" href="#_6-重启终端或者运行source-users-xixi-zprofile-让brew生效" aria-label="Permalink to &quot;6.重启终端或者运行source /Users/xixi/.zprofile  让brew生效&quot;">​</a></h4><h3 id="二、安装其他所需依赖" tabindex="-1">二、安装其他所需依赖 <a class="header-anchor" href="#二、安装其他所需依赖" aria-label="Permalink to &quot;二、安装其他所需依赖&quot;">​</a></h3><p>下面我们需要使用 <code>brew</code> 安装一些所需要的依赖包: <code>make</code> <code>protobuf</code> <code>rust</code> <code>python@3.10</code> <code>git</code> <code>wget</code>, 可以直接复制下面代码到终端并执行</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">brew</span><span style="color:#98C379;"> install</span><span style="color:#98C379;"> cmake</span><span style="color:#98C379;"> protobuf</span><span style="color:#98C379;"> rust</span><span style="color:#98C379;"> python@3.10</span><span style="color:#98C379;"> git</span><span style="color:#98C379;"> wget</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="三、拉取-stable-diffusion-web-ui-存储库" tabindex="-1">三、拉取 Stable Diffusion Web UI 存储库 <a class="header-anchor" href="#三、拉取-stable-diffusion-web-ui-存储库" aria-label="Permalink to &quot;三、拉取 Stable Diffusion Web UI 存储库&quot;">​</a></h3><p>这里我们需要拉取下 <code>Stable Diffusion</code> 的一个 <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui" target="_blank" rel="noreferrer">WEB UI</a> 仓库代码</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">git</span><span style="color:#98C379;"> clone</span><span style="color:#98C379;"> https://github.com/AUTOMATIC1111/stable-diffusion-webui</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="四、下载模型" tabindex="-1">四、下载模型 <a class="header-anchor" href="#四、下载模型" aria-label="Permalink to &quot;四、下载模型&quot;">​</a></h3><h4 id="软件安装" tabindex="-1">软件安装 <a class="header-anchor" href="#软件安装" aria-label="Permalink to &quot;软件安装&quot;">​</a></h4><p>网盘下载：我用夸克网盘分享了「AITools(爱兔)」，点击链接即可保存。打开「夸克APP」</p><p>链接：<a href="https://pan.quark.cn/s/7d93e96740e5" target="_blank" rel="noreferrer">https://pan.quark.cn/s/7d93e96740e5</a></p><p>或者在这里我们需要提前下载好一个基本的 <a href="https://huggingface.co/CompVis/stable-diffusion-v-1-4-original" target="_blank" rel="noreferrer">模型</a>, 点击 <a href="https://huggingface.co/CompVis/stable-diffusion-v-1-4-original" target="_blank" rel="noreferrer">这里</a> 进入下载页</p><p><img src="'+d+'" alt="image"></p><p>下载好模型后, 需要将模型文件放到 <code>stable-diffusion-webui/models/Stable-diffusion</code> 目录下</p><p><img src="'+u+`" alt="image"></p><h3 id="五、启动项目" tabindex="-1">五、启动项目 <a class="header-anchor" href="#五、启动项目" aria-label="Permalink to &quot;五、启动项目&quot;">​</a></h3><p>进入项目, 执行 <code>webui.sh</code> 脚本</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#98C379;"> stable-diffusion-webui</span></span>
<span class="line"><span style="color:#61AFEF;">./webui.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>等待: 这一步会比较久, 需要耐心等待……</p><p><img src="`+h+'" alt="image"></p><p>如果执行上面命令, 抛出错误了则需要修改项目根目录下的 <code>webui-user.sh</code> 文件: 该文件默认 <code>第十三行</code> 是被注释掉的, 我们需要修改这一行内容</p><p><img src="'+f+`" alt="image"></p><p>修改内容如下:</p><div class="language-diff line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">diff</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#7F848E;font-style:italic;"># 第13行</span></span>
<span class="line"><span style="color:#98C379;">+ export COMMANDLINE_ARGS=&quot;--medvram --opt-split-attention --skip-torch-cuda-test --no-half --use-cpu all&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p><img src="`+m+'" alt="image"></p><p>最后重新运行 <code>webui.sh</code> 脚本:</p><div class="language-sh line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki one-dark-pro vp-code"><code><span class="line"><span style="color:#61AFEF;">./webui.sh</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>等待片刻, 这里如果成功运行的话, 最后会给出一个 <code>WEB UI</code> 界面的 <code>访问地址</code></p><p><img src="'+g+'" alt="image"></p><p>下面我们就可以通过上面的地址, 在浏览器访问 <code>Stable Diffusion</code> <code>WEB UI</code> 界面</p><p><img src="'+_+'" alt="image"></p><h3 id="六、测试" tabindex="-1">六、测试 <a class="header-anchor" href="#六、测试" aria-label="Permalink to &quot;六、测试&quot;">​</a></h3><p>下面我们尝试在界面上输入 <code>咒语</code> 生成图片, 如下截图在输入框中输入关键词 <code>home</code>, 然后点击 <code>Generate</code> 开始绘画</p><p><img src="'+w+'" alt="image"></p><p>这里我们可以观察控制台, 就能够看到, 如下进度条, 这就说明系统正在生成图片</p><p><img src="'+y+'" alt="image"></p><p>这里需要等待一会(机器配置好坏决定等待时长), 最终会在右边生成一张图(当然图片的质量肯定是一般般的, 因为我们的咒语还是太简单了)</p><p><img src="'+A+'" alt="image"></p><p>这里我们还可以看下, 终端进度条, 也以显示 <code>100%</code></p><p><img src="'+k+'" alt="image"></p><blockquote><p>最后补充下: 如果出现如下报错, 请参考上一章节, 通过修改项目根目录下的 <code>webui-user.sh</code> 文件, 可修改该问题</p></blockquote><p><img src="'+B+'" alt="image"></p><h3 id="七、汉化" tabindex="-1">七、汉化 <a class="header-anchor" href="#七、汉化" aria-label="Permalink to &quot;七、汉化&quot;">​</a></h3><p>由于 <code>stable diffusion webui</code> 项目都英文的, 但是呢里面又涉及到很多设置与参数, 为了方便设置参数, 这里还是很有必要针对 <code>stable diffusion webui</code> 进行一个汉化</p><h4 id="_7-1-安装汉化包" tabindex="-1">7.1 安装汉化包 <a class="header-anchor" href="#_7-1-安装汉化包" aria-label="Permalink to &quot;7.1 安装汉化包&quot;">​</a></h4><p>汉化包我们选择 <a href="https://github.com/VinsonLaro/stable-diffusion-webui-chinese" target="_blank" rel="noreferrer">stable-diffusion-webui-chinese</a>, 在项目文档中介绍了两种安装方式, 这里我们选择第一种方式进行安装:</p><p><img src="'+C+'" alt="image"></p><p>这里我们进入下载安装的一个界面(<code>Extensions</code> -&gt; <code>Install from URL</code>), 这里可安装图示进行操作, 下面链接就是仓库地址 <code>https://github.com/VinsonLaro/stable-diffusion-webui-chinese</code>, 这里点击安装时会有个安装进度条(没截到 😭)</p><p><img src="'+v+'" alt="image"></p><p>安装完成后, 我们还需要, 重新加载下 <code>UI</code>, 这里直接点击页面底部的 <code>Reload UI</code> 即可</p><p><img src="'+q+'" alt="image"></p><h4 id="_7-2-配置语言" tabindex="-1">7.2 配置语言 <a class="header-anchor" href="#_7-2-配置语言" aria-label="Permalink to &quot;7.2 配置语言&quot;">​</a></h4><p>上面我们只是完成汉化包的安装, 下面还需要配置下语言, 配置路径: <code>Settings</code> -&gt; <code>User interface</code> -&gt; <code>Localization</code>, 这里我选择的是 <code>chinese-english-0512</code>, 这样的话页面就会有中英文的一个对照, 方便后面参数配置</p><p><img src="'+I+'" alt="image"></p><p>选择完后, <code>保存配置</code> 并 <code>重新加载 UI</code></p><p><img src="'+D+'" alt="image"></p><p>最后可以看下最终汉化后的效果</p><p><img src="'+F+'" alt="image"></p><h3 id="八、模型下载-演示" tabindex="-1">八、模型下载 &amp; 演示 <a class="header-anchor" href="#八、模型下载-演示" aria-label="Permalink to &quot;八、模型下载 &amp; 演示&quot;">​</a></h3><p>下面我们尝试下载安装模型, 进行一个简单的尝试</p><h4 id="_8-1-模型下载" tabindex="-1">8.1 模型下载 <a class="header-anchor" href="#_8-1-模型下载" aria-label="Permalink to &quot;8.1 模型下载&quot;">​</a></h4><p>模型下载源这里推荐 <a href="https://civitai.com" target="_blank" rel="noreferrer">C 站</a>, 在这上面我们可以下载各种风格的模型</p><p><img src="'+P+'" alt="image"></p><p>这里我选择 <a href="https://civitai.com/models/30240/toonyou" target="_blank" rel="noreferrer">toonyou</a> 模型, 并进行了下载</p><p><img src="'+S+'" alt="image"></p><p>同上文, 这里我们需要将下载后的模型复制到 <code>stable-diffusion-webui/models/Stable-diffusion</code> 目录下</p><p><img src="'+E+'" alt="image"></p><p>最后的最后, 我们需要重新加载下 <code>UI</code></p><p><img src="'+x+'" alt="image"></p><p>加载完成后, 就可以在模型选择一栏, 看到我们下载好的模型了</p><p><img src="'+N+'" alt="image"></p><h4 id="_8-2-开始魔法" tabindex="-1">8.2 开始魔法 <a class="header-anchor" href="#_8-2-开始魔法" aria-label="Permalink to &quot;8.2 开始魔法&quot;">​</a></h4><p>如下演示图, <code>选择模型</code> -&gt; <code>输入魔法</code> -&gt; <code>点击生成</code>, 等待片刻... 即将完成一副巨作</p><blockquote><p>咒语: <code>Girls, Hanfu, aestheticism, cherry, large cherry, petals fall, big scene, elegant Hanfu, dream, unreal, inception space, sci-fi --ar 3:4 --s 250 --q 2 --v 5 --q 1 --s 100</code></p></blockquote><p><img src="'+U+'" alt="image"></p><h3 id="九、参考" tabindex="-1">九、参考 <a class="header-anchor" href="#九、参考" aria-label="Permalink to &quot;九、参考&quot;">​</a></h3><ul><li><a href="https://www.youtube.com/watch?v=4vtLrafPd5c" target="_blank" rel="noreferrer">轻松安装Stable Diffusion WebUI | MacOS M1&amp;2, Intel CPU可用 | 完整指南和教程</a></li><li><a href="https://updayday.notion.site/MacOS-Stable-Diffusion-WebUI-M1-M2-Intel-61a0fd82ea0e451d9ead16beafc3a28b" target="_blank" rel="noreferrer">MacOS:轻松安装Stable Diffusion WebUI | M1, M2, Intel | 完整指南和教程</a></li><li><a href="https://mp.weixin.qq.com/s/gxfWc2tVS2ruoPZhcc1Qsw" target="_blank" rel="noreferrer">免费搭建一套可自由更换模型的stable-diffusion</a></li></ul><h2 id="低成本stable-diffusion-api解决方案" tabindex="-1">低成本Stable Diffusion API解决方案 <a class="header-anchor" href="#低成本stable-diffusion-api解决方案" aria-label="Permalink to &quot;低成本Stable Diffusion API解决方案&quot;">​</a></h2><ul><li><strong>stablediffusion api</strong>：<a href="https://stablediffusionapi.com/" target="_blank" rel="noreferrer">https://stablediffusionapi.com/</a></li><li><strong>replicate</strong>：<a href="https://replicate.com/stability-ai/stable-diffusion" target="_blank" rel="noreferrer">https://replicate.com/stability-ai/stable-diffusion</a></li></ul><h2 id="远程云端部署stable-diffusion" tabindex="-1">远程云端部署Stable Diffusion <a class="header-anchor" href="#远程云端部署stable-diffusion" aria-label="Permalink to &quot;远程云端部署Stable Diffusion&quot;">​</a></h2><h3 id="简单又便宜-所有人都能用上完整版-stable-diffusion" tabindex="-1">简单又便宜！所有人都能用上完整版 Stable Diffusion <a class="header-anchor" href="#简单又便宜-所有人都能用上完整版-stable-diffusion" aria-label="Permalink to &quot;简单又便宜！所有人都能用上完整版 Stable Diffusion&quot;">​</a></h3><table><thead><tr><th></th><th><strong>价格</strong></th><th><strong>简单</strong></th><th><strong>版本</strong></th><th><strong>便携</strong></th><th><strong>整体评价</strong></th></tr></thead><tbody><tr><td><strong>Google colab</strong></td><td>⭐⭐⭐⭐⭐</td><td>⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>价格相对较低，操作简单，但稳定性较差</td></tr><tr><td><strong>大厂云服务</strong></td><td>⭐⭐</td><td>⭐⭐</td><td>⭐⭐</td><td>⭐⭐⭐⭐⭐</td><td>价格较高，操作流程复杂，可能存在bug</td></tr><tr><td><strong>AI工具整合包</strong></td><td>⭐⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐</td><td>⭐⭐⭐⭐⭐</td><td>价格适中，操作简单，但版本更新不及时</td></tr><tr><td><strong>MAC 电脑本地安装</strong></td><td>⭐⭐</td><td>⭐</td><td>⭐</td><td>⭐⭐⭐</td><td>成本高，操作复杂，效果不佳</td></tr><tr><td><strong>PC 台式机本地安装</strong></td><td>⭐⭐⭐</td><td>⭐⭐⭐</td><td>⭐⭐⭐⭐</td><td>⭐</td><td>成本高，操作复杂，便携性差</td></tr></tbody></table><p>苹果设备、电脑性能受限或者预算有限，可以使用完整版 Stable Diffusion 么？完全可以！作者 @逗砂 分享了自己尝试且放弃过的多个方案，并最终找到了最满意的工具 —— <strong>揽睿星舟！</strong></p><p><em>0</em>. <strong>网址</strong> ：<a href="https://www.lanrui-ai.com" target="_blank" rel="noreferrer">www.lanrui-ai.com/</a></p><p><em>1</em>. <strong>价格</strong>：一块 3090的每小时算力价格只要1.9元，这是目前看到的国内最低价格</p><p><em>2</em>. <strong>简单</strong>：官方针对 Stable Diffusion 做了快捷版应用，直接点击安装就可以使用，更新也比较及时</p><p><em>3</em>. <strong>版本</strong>：目前看到的唯一一个能够用非本地安装的方式看到最新版本的controlnet的工具，虽然目前只在基于工作空间的方式可以使用 <a href="https://mp.weixin.qq.com/s/p1rqHPcjHXswowBdO5OHvQ" target="_blank" rel="noreferrer"><strong>⋙ 使用教程</strong></a></p><p>————————————————————————————————————————————</p><p>教程：【AI绘画、国产ChatGPT一键部署，免费服务器A10显卡，10分钟搭建保姆级教程】<a href="https://www.bilibili.com/video/BV18c411M7PM?vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV18c411M7PM?vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><p>一键部署，使用阿里云，远程云端部署Stable Diffusion、通义千问，本地电脑无需高性能的显卡，不用部署复杂的开发环境，也能玩各种有趣好玩的AI算法。</p><ul><li>免费试用中心：<a href="https://click.aliyun.com/m/1000373727/" target="_blank" rel="noreferrer">https://click.aliyun.com/m/1000373727/</a></li><li>函数计算FC：<a href="https://click.aliyun.com/m/1000374159/" target="_blank" rel="noreferrer">https://click.aliyun.com/m/1000374159/</a></li><li>文件存储NAS：<a href="https://click.aliyun.com/m/1000374158/" target="_blank" rel="noreferrer">https://click.aliyun.com/m/1000374158/</a></li></ul><p>————————————————————————————————————————</p><p>【【AI绘画】阿里云在线试用 免费服务器v100显卡 5分钟搭建WebUI 保姆级教程】<a href="https://www.bilibili.com/video/BV1po4y1877P?vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1po4y1877P?vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><ul><li>阿里云试用宝典：<a href="https://developer.aliyun.com/free/" target="_blank" rel="noreferrer">https://developer.aliyun.com/free/</a></li><li>机器学习PAI控制台：<a href="https://pai.console.aliyun.com/" target="_blank" rel="noreferrer">https://pai.console.aliyun.com/</a></li><li>一键包/镜像资源：<a href="https://pan.quark.cn/s/12af730acb20" target="_blank" rel="noreferrer">https://pan.quark.cn/s/12af730acb20</a></li></ul><p>【保姆级教程：在colab云端上面部署stable diffusion并汉化，免费的15G显存】<a href="https://www.bilibili.com/video/BV15m4y1r7Y3?vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV15m4y1r7Y3?vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><p>【AutoDL GPU云端部署，开启Stablediffusion无限跑图】<a href="https://www.bilibili.com/video/BV1eL411B7jn?vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1eL411B7jn?vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><p>【五分钟学会Stable Diffusion一键安装包Easy Diffusion】<a href="https://www.bilibili.com/video/BV1B24y1j7jg?vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1B24y1j7jg?vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><p>【腾讯云GPU服务器部署Ai绘画Stable Diffusion全过程，操作简单，直接复制粘贴代码即可】<a href="https://www.bilibili.com/video/BV1NY4y1S7eA?vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1NY4y1S7eA?vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><h2 id="colab部署stablediffusion" tabindex="-1">colab部署StableDiffusion <a class="header-anchor" href="#colab部署stablediffusion" aria-label="Permalink to &quot;colab部署StableDiffusion&quot;">​</a></h2><ul><li>服务器在我们本地，不用联网了，空间大。</li><li>搭在服务器上还有另一个好处，就是我弄好以后全实验室都可以用，启动起来就不用停下了。</li><li>Colab要科学上网。</li><li>谷歌硬盘空间太小，放不下我想要的所有checkpoint</li><li>Colab长时间不用会自己断开</li><li>……</li></ul><p><strong>绘图消耗的计算成本相对于自己装机或者购买显卡来说超级低，适合新入门尝鲜。</strong></p><ul><li>首先，<strong>访问一键部署脚本</strong>。跳转谷歌 🌍<a href="https://colab.research.google.com/drive/1lekLF7iib6M1R-NCylS0VMTF4wve-XuV" target="_blank" rel="noreferrer">Google Colab</a>，并运行脚本中的第1步。</li><li>然后，在第2步中选择 SD 模型处填入 <strong>ChilloutMix</strong> ，点击运行。</li><li>接着，<strong>设置 LoRA</strong> (默认内置选项，或填写他人的 LoRA 模型下载地址)，点击运行。</li><li>继续，依次点击运行即可后续几步，直到显示<strong>绘图环境安装成功。</strong></li><li><strong>开始绘图</strong>，按照作者教程填写 prompt 信息，选择 LoRA 模型，就可以生成图片啦。</li><li><strong>参数优化</strong>，如果觉得默认设置生成的图片分辨率低，可以按照图示调整参数。</li></ul><p><a href="https://juejin.cn/post/7217750296171233339" target="_blank" rel="noreferrer">无显卡也能AI作画 | Colab + Stable Diffusion WebUI - 掘金 (juejin.cn)</a></p><h2 id="阿里云serverless部署stablediffusion" tabindex="-1">阿里云Serverless部署StableDiffusion <a class="header-anchor" href="#阿里云serverless部署stablediffusion" aria-label="Permalink to &quot;阿里云Serverless部署StableDiffusion&quot;">​</a></h2><p><a href="https://juejin.cn/post/7237004563647397946" target="_blank" rel="noreferrer">免费搭建个人stable-diffusion绘画(非本地、干货教程) - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7221142199391961147" target="_blank" rel="noreferrer">阿里云 AIGC 白嫖 FC 搭建 stable diffusion - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7221884988492398651" target="_blank" rel="noreferrer">阿里云 PAI 免费试用搭建 stable-diffusion-WebUI - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7246401806677442617" target="_blank" rel="noreferrer">白嫖党 YYDS: 阿里云快速搭建 Stable Diffusion - 掘金 (juejin.cn)</a></p><p>————————————————————————————————————————</p><h3 id="上手操作" tabindex="-1">上手操作 <a class="header-anchor" href="#上手操作" aria-label="Permalink to &quot;上手操作&quot;">​</a></h3><p>之前我们部署应用，都是通过服务器或者云服务器居多，需要自己去：各种装软件，各种配环境（这一步往往就劝退了很多人），各种操作搞一通。</p><p>而这次我们彻底换一个方式，不用服务器，而是用容器，而且是基于Serverless的容器集群，然而<strong>过程却非常简单</strong>，<strong>快速上手</strong>。</p><p>老规矩，这里还是以阿里云为例。</p><p>这里<strong>直接访问快速入口</strong>：</p><p><a href="https://click.aliyun.com/m/1000373164/" target="_blank" rel="noreferrer">click.aliyun.com/m/100037316…</a></p><p>即可打开阿里云的资源领用中心：</p><p><img src="'+M+'" alt="页面地址：https://click.aliyun.com/m/1000373164/"></p><p>注意，这个地址大家可以收藏好。</p><p>因为我不止一次地收到过类似私信，说：</p><ul><li>阿里云上是怎么免费领取资源来着？</li><li>新用户是怎么白瞟阿里云的资源来着？</li></ul><p>而这个地址：</p><p><a href="https://click.aliyun.com/m/1000373164/" target="_blank" rel="noreferrer">click.aliyun.com/m/100037316…</a></p><p><strong>它就是总入口！</strong></p><p>打开之后可以看到，里面有很多分类和产品，用户之前如果没有用过这个产品的话，都可以免费领用。</p><p><img src="'+G+'" alt="页面地址：https://click.aliyun.com/m/1000373164/"></p><p>所以这个地址建议大家可以收藏好，免得后续临时想用时却找不到。或者说以后但凡想白瞟阿里云资源时（doge），就可以打开这个地址进去看看。</p><p>这次AI绘画应用的部署我们要用的是容器集群，<strong>直接访问快速入口</strong>：</p><p><a href="https://click.aliyun.com/m/1000374087/" target="_blank" rel="noreferrer">click.aliyun.com/m/100037408…</a></p><p>进去之后，我们直接点击「立即试用」按钮。</p><p><img src="'+T+'" alt="img"></p><p>首先可以在弹出的面板上选择好地域，然后在服务协议右侧，单击「完成服务角色的授权」进入授权。</p><p><img src="" alt="转存失败，建议直接上传图片文件"></p><p>授权完成以后，再回到该面板，重新勾选服务协议之后：</p><p><img src="'+V+'" alt="img"></p><p>方可点击「立即试用」按钮来正式创建资源了。</p><p><img src="" alt="转存失败，建议直接上传图片文件"></p><p>完成之后，进入集群的控制台页面，可以看到系统正在帮我们自动创建一个标准版容器集群，等待几分钟后，当集群状态为「运行中」时，即可正常使用。</p><p><img src="'+j+'" alt="img"></p><p>集群就绪以后，接下来我们就可以在里面部署各种各样好玩的应用了！</p><h3 id="部署stable-diffusion应用" tabindex="-1">部署Stable Diffusion应用 <a class="header-anchor" href="#部署stable-diffusion应用" aria-label="Permalink to &quot;部署Stable Diffusion应用&quot;">​</a></h3><p>接上一步，集群就绪以后，接下来我们就在这个容器集群里，来部署上线Stable Diffusion这个AI绘画应用。</p><p>它将会以容器的方式来运行，非常方便。</p><p>我们点进刚创建完成的集群，会进入到集群的工作页面。</p><p>此时我们进入左侧导航栏里的「工作负载」 &gt; 「无状态」，然后选择右上角「使用镜像创建」的方式来部署此次AI绘画应用。</p><p><img src="'+L+'" alt="img"></p><p>接下来按如下步骤填写几个关键信息，即可快速上线AI应用。</p><ul><li>应用基本信息</li></ul><p>这一步主要就是填写应用名称等信息，大家根据需要自行填写即可。</p><p><img src="'+W+'" alt="img"></p><ul><li>容器配置</li></ul><p>这一步虽然比较关键，但是设置非常简单，我们只需要设置好如下几个选项即可，其他保持不动。</p><table><thead><tr><th>配置项</th><th>配置内容</th></tr></thead><tbody><tr><td>镜像名称</td><td><code>yunqi-registry.cn-shanghai.cr.aliyuncs.com/lab/stable-diffusion</code></td></tr><tr><td>镜像标签</td><td><code>v1.2.0</code></td></tr><tr><td>所需资源</td><td>8Core 16GB</td></tr><tr><td>启动执行命令</td><td><code>[&quot;python3&quot;, &quot;launch.py&quot;]</code></td></tr><tr><td>启动执行参数</td><td><code>[&quot;--listen&quot;, &quot;--skip-torch-cuda-test&quot;, &quot;--no-half&quot;]</code></td></tr></tbody></table><p><img src="'+R+'" alt="img"></p><p><img src="'+O+'" alt="img"></p><blockquote><p>需要说明一点的是：正因为平台官方对该镜像做了加速，所以等下拉取会很快，不然像这种AI应用的镜像一般都比较大，动不动就十几GB，没有加速的话实在太慢了，所以这也是为什么这次选用该容器集群来进行应用部署的重要原因。</p></blockquote><ul><li>高级配置</li></ul><p>在该Tab页部分，我们重点需要设置的就是「对外服务的Service」，我们希望这个应用能被大家所访问到。</p><p><img src="'+z+'" alt="img"></p><p>点击上图中的「创建」按钮之后，会弹出「创建服务」的对话框。</p><p>其他配置都不需要动，我们只需要设置一下端口映射关系即可：我们通过7860这个端口提供给大家访问。</p><p><img src="'+H+'" alt="img"></p><p>以上这些配置都完成以后，我们点击创建，系统就会自动提交并开始部署应用，<strong>过程就是这么简单</strong>！</p><p><img src="'+K+'" alt="img"></p><p>点击上方的「查看应用详情」后，我们也可以到控制台里去追踪应用的具体部署情况。等Pod的状态变为Running时，应用就已经成功上线了！</p><p><img src="'+X+'" alt="img"></p><p>所以整个过程就是这么简单，我们通过一个非常<strong>低成本且简单的方法</strong>将Stable Diffusion这个AI绘画应用给部署上线了，并且公网可访问。</p><h3 id="效果展示" tabindex="-1">效果展示 <a class="header-anchor" href="#效果展示" aria-label="Permalink to &quot;效果展示&quot;">​</a></h3><p>以上操作完成以后，Stable Diffusion就已经顺利部署上线了。</p><p>此时我们回到集群页面，点击左侧导航栏里的「网络」 &gt; 「服务」，可以看到对外提供的Stable Diffusion公网服务。</p><p><img src="'+Q+'" alt="img"></p><p>其对应有一个「外部端点」，即：一个可以访问Stable Diffusion AI绘画的公网IP。</p><p>我们直接点击，就可以打开浏览器，访问到Stable Diffusion的Web UI页面。</p><p><img src="'+Y+'" alt="img"></p><p>此时我们在该页面中输入提示词和参数，就可以开始AI绘画的创作了。</p><p><img src="'+J+'" alt="img"></p><p>所以整个过程非常简单易上手。</p><h3 id="上手使用" tabindex="-1">上手使用 <a class="header-anchor" href="#上手使用" aria-label="Permalink to &quot;上手使用&quot;">​</a></h3><p>好啦，聊了这么多，落实到应用上，还是得自己上手实践一波。</p><p>大家可以按照上述过程操作一遍，这也可以说是目前非常低成本部署AI绘画应用的方式了，而且过程非常简单。</p><p>有兴趣的小伙伴可以尝试一波，具体快捷入口为：</p><p><a href="https://click.aliyun.com/m/1000374087/" target="_blank" rel="noreferrer">click.aliyun.com/m/100037408…</a></p><p>另外像civitai.com或者liandange.com等模型网站上也有很多AI绘画相关的模型，都可以直接在：<a href="https://click.aliyun.com/m/1000374087/" target="_blank" rel="noreferrer">click.aliyun.com/m/100037408…</a> 上进行部署使用。</p><p><img src="'+Z+'" alt="img"></p><p>大家有兴趣也可以试一试，相信会打开一个新世界的大门</p><h2 id="『腾讯云-serverless-stable-diffusion-开放免费试用申请』人人都能开箱即用" tabindex="-1">『腾讯云 Serverless Stable Diffusion 开放免费试用申请』人人都能开箱即用 <a class="header-anchor" href="#『腾讯云-serverless-stable-diffusion-开放免费试用申请』人人都能开箱即用" aria-label="Permalink to &quot;『腾讯云 Serverless Stable Diffusion 开放免费试用申请』人人都能开箱即用&quot;">​</a></h2><p>⋙ 申请地址：<a href="https://cloud.tencent.com/apply/p/3vynfzu3l8e" target="_blank" rel="noreferrer">cloud.tencent.com/apply/p/3vy…</a></p><p><a href="https://mp.weixin.qq.com/s/bZ3F-e2UpW1fHVBSR5EUvQ" target="_blank" rel="noreferrer"><strong>⋙ 腾讯云官方发布</strong></a></p><p><img src="'+$+'" alt="img"></p><p>在过去的一段时间里，Stable Diffusion 在人物生成、场景生成、媒资生成、设计素材生成、游戏材质生成等领域，都展现出了极大的潜力与令人惊艳的效果。</p><p>除了自己动手在本地、服务器上搭建 Stable Diffusion 服务外，基于腾讯云函数 SCF 的云上 Stable Diffusion 应用将于近日发布，并已开启试用申请！部署完成后，你将直接得到一个可访问的 WebUI 链接 / API 地址！再也不用担心自己小电脑带不起来啦！</p><h2 id="在亚马逊-sagemaker-进行-stable-diffusion-模型服务部署" tabindex="-1">在亚马逊 SageMaker 进行 Stable Diffusion 模型服务部署 <a class="header-anchor" href="#在亚马逊-sagemaker-进行-stable-diffusion-模型服务部署" aria-label="Permalink to &quot;在亚马逊 SageMaker 进行 Stable Diffusion 模型服务部署&quot;">​</a></h2><p><a href="https://juejin.cn/post/7221497108008255548" target="_blank" rel="noreferrer">如何在亚马逊 SageMaker 进行 Stable Diffusion 模型在线服务部署 - 掘金 (juejin.cn)</a></p><h2 id="kaggle版部署" tabindex="-1">Kaggle版部署 <a class="header-anchor" href="#kaggle版部署" aria-label="Permalink to &quot;Kaggle版部署&quot;">​</a></h2><p>Kaggle 是世界上最大的数据科学社区，拥有强大的工具和资源，可帮助您实现数据科学目标。（每周可以免费使用30个小时）。</p><p><strong>AI绘画StableDiffusion：云端在线版免费使用笔记分享</strong>：<a href="https://y3if3fk7ce.feishu.cn/docx/OiRUd0E6uoXOLexAkNicfyBEnBg" target="_blank" rel="noreferrer">‍⁢⁤AI绘画StableDiffusion：云端在线版免费使用笔记分享（Kaggle版） - 飞书云文档 (feishu.cn)</a></p><p><a href="https://juejin.cn/post/7247306840199135287" target="_blank" rel="noreferrer">AI 绘画基于 Kaggle 10 分钟搭建 Stable Diffusion（保姆级教程） - 掘金 (juejin.cn)</a></p><p><a href="https://juejin.cn/post/7248072694334226469" target="_blank" rel="noreferrer">StableDiffusion（Kaggle版）笔记分享 - 掘金 (juejin.cn)</a></p><h2 id="【chatglm-6b-stablediffusion-网络搜索】本地部署绘图" tabindex="-1">【ChatGLM-6B+StableDiffusion+网络搜索】本地部署绘图 <a class="header-anchor" href="#【chatglm-6b-stablediffusion-网络搜索】本地部署绘图" aria-label="Permalink to &quot;【ChatGLM-6B+StableDiffusion+网络搜索】本地部署绘图&quot;">​</a></h2><p>视频教程：【【ChatGLM-6B+StableDiffusion+网络搜索】本地部署可绘图，网上寻找信息的AI】<a href="https://www.bilibili.com/video/BV1gX4y1B7PV?vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1gX4y1B7PV?vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><p>本项目基于 ChatGLM-6B (<a href="https://github.com/THUDM/ChatGLM-6B" target="_blank" rel="noreferrer">https://github.com/THUDM/ChatGLM-6B</a>) 后期调教，</p><p>网络爬虫及 Stable Diffusion (<a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui" target="_blank" rel="noreferrer">https://github.com/AUTOMATIC1111/stable-diffusion-webui</a>)</p><p>项目实现了 ChatGLM-6B 的网络搜索及图片生成功能</p><p>项目源码：<a href="https://github.com/LemonQu-GIT/ChatGLM-6B-Engineering" target="_blank" rel="noreferrer">https://github.com/LemonQu-GIT/ChatGLM-6B-Engineering</a></p><p>秋叶里改下端口设置下允许API就可以了， 秋叶安装包默认的7860端口改成这个默认7861</p><p>视频教程：【【AI绘图】ChatGLM+StableDiffusion整合包】<a href="https://www.bilibili.com/video/BV1Wa4y1V77o?vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1Wa4y1V77o?vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><p>网盘链接：<a href="https://pan.baidu.com/s/19kbrJyZXKa093i3N6UYfqQ?pwd=pxok" target="_blank" rel="noreferrer">https://pan.baidu.com/s/19kbrJyZXKa093i3N6UYfqQ?pwd=pxok</a></p><p>lemon大佬的github仓库：<a href="https://github.com/LemonQu-GIT/ChatGLM-6B-Engineering" target="_blank" rel="noreferrer">https://github.com/LemonQu-GIT/ChatGLM-6B-Engineering</a> 秋叶大佬的SD整合包：<a href="https://www.bilibili.com/video/BV1iM4y1y7oA" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1iM4y1y7oA</a> lemon大佬的演示视频：<a href="https://www.bilibili.com/video/BV1gX4y1B7PV" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1gX4y1B7PV</a> ChatGLM-6B官方仓库：<a href="https://github.com/THUDM/ChatGLM-6B" target="_blank" rel="noreferrer">https://github.com/THUDM/ChatGLM-6B</a></p><p>视频音源：樱桃MOMO叉屁屁<a href="https://space.bilibili.com/75044618" target="_blank" rel="noreferrer">https://space.bilibili.com/75044618</a></p><h2 id="把stable-diffusion变成商用软件" tabindex="-1">把Stable Diffusion变成商用软件 <a class="header-anchor" href="#把stable-diffusion变成商用软件" aria-label="Permalink to &quot;把Stable Diffusion变成商用软件&quot;">​</a></h2><p>视频：【开源！如何把stable diffusion变成商用软件？教你正确的调用stable diffusion api！】<a href="https://www.bilibili.com/video/BV1Y14y127BY?vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1Y14y127BY?vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><ul><li>sdwebui-api-manager: <a href="https://github.com/nftblackmagic/sdwebui-api-manager" target="_blank" rel="noreferrer">https://github.com/nftblackmagic/sdwebui-api-manager</a></li><li>sd-webui-hook-v2: <a href="https://github.com/nftblackmagic/sd-webui-hook-v2" target="_blank" rel="noreferrer">https://github.com/nftblackmagic/sd-webui-hook-v2</a></li><li>stable diffusion webui: <a href="https://github.com/AUTOMATIC1111/stable-diffusion-webui" target="_blank" rel="noreferrer">https://github.com/AUTOMATIC1111/stable-diffusion-webui</a></li></ul><h2 id="基于stable-diffusion-webui-本地启动" tabindex="-1">基于Stable Diffusion WebUI 本地启动 <a class="header-anchor" href="#基于stable-diffusion-webui-本地启动" aria-label="Permalink to &quot;基于Stable Diffusion WebUI 本地启动&quot;">​</a></h2><h2 id="stable-diffusion的后端服务器实例部署" tabindex="-1">Stable Diffusion的后端服务器实例部署 <a class="header-anchor" href="#stable-diffusion的后端服务器实例部署" aria-label="Permalink to &quot;Stable Diffusion的后端服务器实例部署&quot;">​</a></h2><p>【Stable diffusion的后端服务器该如何选择？这个服务器最省钱！一键部署webui api服务实例！】<a href="https://www.bilibili.com/video/BV1uP411e7eo?vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1uP411e7eo?vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><ul><li>runpod：<a href="https://runpod.io?ref=dceuo3m2" target="_blank" rel="noreferrer">https://runpod.io?ref=dceuo3m2</a></li><li>github开源：<a href="https://github.com/nftblackmagic/sdwebui-api-manager.git" target="_blank" rel="noreferrer">https://github.com/nftblackmagic/sdwebui-api-manager.git</a></li><li>aws：<a href="https://docs.aws.amazon.com/dlami/latest/devguide/gpu.html" target="_blank" rel="noreferrer">https://docs.aws.amazon.com/dlami/latest/devguide/gpu.html</a></li><li>lambda：<a href="https://lambdalabs.com/service/gpu-cloud/pricing" target="_blank" rel="noreferrer">https://lambdalabs.com/service/gpu-cloud/pricing</a></li></ul><h2 id="stablediffusion腾讯云快速部署" tabindex="-1">StableDiffusion腾讯云快速部署 <a class="header-anchor" href="#stablediffusion腾讯云快速部署" aria-label="Permalink to &quot;StableDiffusion腾讯云快速部署&quot;">​</a></h2><p>教程：【StableDiffusion腾讯云快速部署，全网最详细保姆级教程（AI绘画、技术小白必看）】<a href="https://www.bilibili.com/video/BV1gu4y1o7Bg?vd_source=36c9491a7fa2ab8a22ca060af01b7472" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1gu4y1o7Bg?vd_source=36c9491a7fa2ab8a22ca060af01b7472</a></p><p>文中所涉及的软件以及地址：</p><ul><li>腾讯云服务器购买入口：<a href="http://985.so/mfnph" target="_blank" rel="noreferrer">http://985.so/mfnph</a></li><li>叶秋一键安装包链接（含contrlnet1.1）: <a href="http://985.so/mfz5h" target="_blank" rel="noreferrer">http://985.so/mfz5h</a></li><li>hNVIDIA 官网驱动下载： <a href="http://985.so/mfz54" target="_blank" rel="noreferrer">http://985.so/mfz54</a></li><li>FTP Rush：<a href="http://985.so/mfz5g" target="_blank" rel="noreferrer">http://985.so/mfz5g</a></li><li>插件地址： <ul><li>中英文对照界面插件：<a href="https://gitcode.net/overbill1683/stable-diffusion-webui-localization-zh_Hans" target="_blank" rel="noreferrer">https://gitcode.net/overbill1683/stable-diffusion-webui-localization-zh_Hans</a></li><li>最牛提示词插件：<a href="https://gitcode.net/ranting8323/sd-webui-prompt-all-in-one" target="_blank" rel="noreferrer">https://gitcode.net/ranting8323/sd-webui-prompt-all-in-one</a></li></ul></li></ul><p>服务器环境搭建篇</p><h3 id="一、前言" tabindex="-1">一、前言 <a class="header-anchor" href="#一、前言" aria-label="Permalink to &quot;一、前言&quot;">​</a></h3><ul><li>关键词：便捷、省钱、简单</li><li>大家好，我是AI训练师，一个并不懂技术的AI爱好者。</li><li>如今AI做图火了，各大云服务商开始降价，吸引AI玩家租用GPU服务器出图炼丹，网络上也有各类免费薅羊毛的视频供大家学习。但是经过一圈配置下来就会发现，使用过程会遇到各种坑：英文环境报错看不懂，图片不知道存哪里了，下载图片得一张张下，忘记关机还被扣费等等。玩到最后懵逼的你依然懵逼，我是来薅羊毛的，不是来学习一门计算机编程的（此处应该有掌声！）。</li><li>要知道，我只是个计算机小白好不好，平时用的是Windows11系统的电脑，点开秋叶整合包的启动器，直接弹出StableDiffusion的出图界面，才是我的习惯。</li><li>如何以最快、最省钱、最简单的方式使用StableDiffusion出图呢，我研究出了一整套小白也能看懂的腾讯云端Windows部署方案，让大家在云端部署后也能像在本地电脑一样使用方便。（这个方案还可以多人一起共享哟，费用有人AA了，是不是还有点小激动啊^-^）</li></ul><h3 id="二、操作步骤" tabindex="-1">二、操作步骤 <a class="header-anchor" href="#二、操作步骤" aria-label="Permalink to &quot;二、操作步骤&quot;">​</a></h3><h4 id="_2-1-购买服务器" tabindex="-1">2.1 购买服务器 <a class="header-anchor" href="#_2-1-购买服务器" aria-label="Permalink to &quot;2.1 购买服务器&quot;">​</a></h4><p>跟大家想的一样，GN8型的服务器有P40的显卡，每天到时间就被抢光了，基本抢不到，手速好的可以试试。我们就买GN7型号的，自Tesla-T4显卡，也是个不错的选择。点击“立即购买”按钮 活动地址：<a href="http://985.so/mfnph" target="_blank" rel="noreferrer">http://985.so/mfnph</a></p><p><img src="'+ee+'" alt="img"></p><ul><li>地域：选择离你最近的地点，不选默认也行，预装镜像：选择Windows sever 2019中文版，点击立即购买付款后</li></ul><p><img src="'+ae+'" alt="img"></p><ul><li>付款购买完成之后（大概5分钟后），我们点击右上角的“控制台”进入腾讯云总览首页，在“我的资源”当中点击“云服务器”即可进入服务器界面</li></ul><p><img src="'+se+'" alt="img"></p><ul><li>这里插一嘴，默认购买的服务器硬盘是100G的，服务器系统直接占用了25G，也就是还剩下75G硬盘，通过我多年的经验，这个硬盘是不够的，建议将系统盘增加至200G，花费17.5元左右。</li></ul><p><img src="'+te+'" alt="img"></p><ul><li>调整目标硬盘大小点击下一步付款就行。</li></ul><p><img src="'+oe+'" alt="img"></p><h4 id="_2-2-登录服务器" tabindex="-1">2.2 登录服务器 <a class="header-anchor" href="#_2-2-登录服务器" aria-label="Permalink to &quot;2.2 登录服务器&quot;">​</a></h4><p>想要登录服务器获取服务器IP地址、用户名和密码，初始密码在顶部的站内信（小信封），点开即可看到，复制好密码后，点击右侧的登录按钮进入登录界面</p><p><img src="'+le+'" alt="img"></p><ul><li>填入密码就能登录，不过这个方式不方便，我一般是点击RDP文件下载，存到桌面，这个是今后登录服务器的快捷方式，如果还想用其他的登录方式可以查看这里<a href="https://cloud.tencent.com/document/product/213/35697%EF%BC%8C" target="_blank" rel="noreferrer">https://cloud.tencent.com/document/product/213/35697，</a></li></ul><p><img src="'+ne+'" alt="img"></p><ul><li>这样就能直接进入到服务器的桌面了</li></ul><p><img src="'+ie+'" alt="img"></p><h4 id="_2-3-安装显卡驱动" tabindex="-1">2.3 安装显卡驱动 <a class="header-anchor" href="#_2-3-安装显卡驱动" aria-label="Permalink to &quot;2.3 安装显卡驱动&quot;">​</a></h4><ul><li>注意了，初始状态下，服务器是没有特斯拉显卡驱动的，我们需要打开服务器自带浏览器，访问 NVIDIA 驱动下载 <a href="http://985.so/mfz54" target="_blank" rel="noreferrer">http://985.so/mfz54</a> 官网 找到Tesla-T4的驱动，下载对应的驱动进行安装</li></ul><p><img src="'+re+'" alt="img"></p><ul><li>默认安装完成之后，点击这个地址 C:\\Program Files\\NVIDIA Corporation\\NVSMI，确认已经存在以下文件，进行下一步</li></ul><p><img src="'+pe+'" alt="img"></p><ul><li>右键“此电脑”选择属性，</li></ul><p><img src="'+ce+'" alt="img"></p><ul><li>点击系统高级系统设置</li></ul><p><img src="'+be+'" alt="img"></p><ul><li>点开环境变量</li></ul><p><img src="'+de+'" alt="img"></p><ul><li>将地址C:\\Program Files\\NVIDIA Corporation\\NVSMI新建至path的环境变量当中，点击确定</li></ul><p><img src="'+ue+'" alt="img"></p><ul><li>开始菜单当中打开命令提示符，</li></ul><p><img src="'+he+'" alt="img"></p><ul><li>输入nvidia-smi 看到以下界面表示驱动程序安装成功，</li></ul><p><img src="'+fe+'" alt="img"></p><ul><li>2.4 安装StableDiffusion主程序（敲黑板，关键点来了）</li></ul><h4 id="_2-4-1上传主程序到服务器" tabindex="-1">2.4.1上传主程序到服务器 <a class="header-anchor" href="#_2-4-1上传主程序到服务器" aria-label="Permalink to &quot;2.4.1上传主程序到服务器&quot;">​</a></h4><ul><li>我们知道StableDiffusion的秋叶一键安装包体积大概快10G左右，介于各位大佬主程序的存储习惯，这里提供了3种下载方案给大家参考，个人最推荐的是第三种，各位可以根据需求选择：</li><li>方案一：百度网盘，须开通超级会员，下载速度实测 12M/s（不开会员你懂的），30元/月；</li><li>叶秋一键安装包链接: <a href="https://pan.baidu.com/s/1kJX3bj_lV8Ks25m4hMkpwQ?pwd=jsnr" target="_blank" rel="noreferrer">https://pan.baidu.com/s/1kJX3bj_lV8Ks25m4hMkpwQ?pwd=jsnr</a></li><li>方案二：夸克网盘，无需开通会员，下载速度实测 300K~500K/s，免费；</li><li>叶秋一键安装包链接：<a href="https://pan.quark.cn/s/320cc763339b" target="_blank" rel="noreferrer">https://pan.quark.cn/s/320cc763339b</a></li><li>方案三：搭建FTP文件服务器，上传/下载速率实测 5M/s，免费；（服务器都租了，传文件还花钱，岂不是冤大头^-^），把本地文件拖动到服务器，或者从服务器上下载图片，拖动过去即可，跟在自己电脑上一样简单。</li><li>云端FTP服务器的搭建，建议参考官方的FTP搭建方式（<a href="https://cloud.tencent.com/document/product/213/10414?from=20421&amp;from_column=20421%EF%BC%89" target="_blank" rel="noreferrer">https://cloud.tencent.com/document/product/213/10414?from=20421&amp;from_column=20421）</a> ，这里我就不赘述了，如果大家在搭建过程遇到很多问题，我再出一个手把手FTP服务器搭建教程。</li><li>本地FTP软件我推荐使用的是FTP Rush（<a href="https://www.wftpserver.com/zh/download.htm#ftprush%EF%BC%89%EF%BC%8C%E9%80%82%E7%94%A8%E4%BA%8E%E5%90%84%E4%B8%AA%E5%B9%B3%E5%8F%B0%E3%80%82" target="_blank" rel="noreferrer">https://www.wftpserver.com/zh/download.htm#ftprush），适用于各个平台。</a></li></ul><p><img src="'+me+'" alt="img"></p><ul><li>另外说一下腾讯云本身也提供文件传输方式COSBrowser，个人不推荐，使用过后好像是按照存储量收费的，别问我怎么知道的，嗯哼~</li></ul><h4 id="_2-4-2-安装软件" tabindex="-1">2.4.2 安装软件 <a class="header-anchor" href="#_2-4-2-安装软件" aria-label="Permalink to &quot;2.4.2 安装软件&quot;">​</a></h4><ul><li>先双击安装“启动器运行依赖”，之后解压sd-webui-aki-v4.1，解压好之后在文件夹内，双击“A启动器”</li></ul><p><img src="'+ge+'" alt="img"></p><ul><li>打开一键启动后</li></ul><p><img src="'+_e+'" alt="img"></p><ul><li>当你看到这个界面的时候就可以开始你的出AI之旅了，到此为止服务器配置基本完成。</li></ul><p><img src="'+we+'" alt="img"></p><h3 id="三、使用技巧及常见问题" tabindex="-1">三、使用技巧及常见问题 <a class="header-anchor" href="#三、使用技巧及常见问题" aria-label="Permalink to &quot;三、使用技巧及常见问题&quot;">​</a></h3><h4 id="_3-1-插件的安装" tabindex="-1">3.1 插件的安装 <a class="header-anchor" href="#_3-1-插件的安装" aria-label="Permalink to &quot;3.1 插件的安装&quot;">​</a></h4><ul><li>汉化：在启动器界面勾选启用“云端页面汉化”，操作界面将会变成是中文的</li></ul><p><img src="'+ye+'" alt="img"></p><ul><li>推荐其他的必选插件</li><li>中英文对照界面插件 <a href="https://gitcode.net/overbill1683/stable-diffusion-webui-localization-zh_Hans" target="_blank" rel="noreferrer">https://gitcode.net/overbill1683/stable-diffusion-webui-localization-zh_Hans</a></li><li>最牛提示词插件 <a href="https://gitcode.net/ranting8323/sd-webui-prompt-all-in-one" target="_blank" rel="noreferrer">https://gitcode.net/ranting8323/sd-webui-prompt-all-in-one</a></li></ul><p><img src="'+Ae+'" alt="img"></p><ul><li>3.2大模型、lora的下载和安装</li><li>秋叶启动器上包含有模型管理，大家可以根据需要自行下载安装，如果这里没有的话，那就去C站<a href="https://civitai.com/%E5%92%8C%E6%8A%B1%E8%84%B8%E4%B8%8A%E6%90%9C%E7%B4%A2https://huggingface.co/models%EF%BC%8C%E4%B8%87%E8%83%BD%E7%9A%84%E4%BA%92%E8%81%94%E7%BD%91%E4%BC%9A%E5%91%8A%E8%AF%89%E4%BD%A0%E4%B8%80%E5%88%87%E3%80%82%E4%B8%8B%E8%BD%BD%E5%90%8E%E7%9A%84%E6%A8%A1%E5%9E%8B%E6%94%BE%E5%9C%A8%E4%BB%80%E4%B9%88%E4%BD%8D%E7%BD%AE%EF%BC%8C%E7%82%B9%E5%87%BB%E5%90%AF%E5%8A%A8%E5%99%A8%E9%A1%B6%E9%83%A8%E7%9A%84%E2%80%9C%E6%89%93%E5%BC%80%E6%96%87%E4%BB%B6%E5%A4%B9%E2%80%9D%E5%8D%B3%E5%8F%AF%E6%89%BE%E5%88%B0%E5%AF%B9%E5%BA%94%E7%9A%84%E6%96%87%E4%BB%B6%E8%B7%AF%E5%BE%84%EF%BC%8C%E6%96%87%E4%BB%B6%E6%94%BE%E8%BF%9B%E5%8E%BB%E5%8D%B3%E5%8F%AF%E3%80%82" target="_blank" rel="noreferrer">https://civitai.com/和抱脸上搜索https://huggingface.co/models，万能的互联网会告诉你一切。下载后的模型放在什么位置，点击启动器顶部的“打开文件夹”即可找到对应的文件路径，文件放进去即可。</a></li></ul><p><img src="'+ke+'" alt="img"></p><ul><li>3.3如何实现多人使用服务器</li><li>一键启动之前，一定要在启动之前将这两个按钮打开，如果已经启动了，将黑色界面的控制台关掉重新配置打开。</li></ul><p><img src="'+Be+'" alt="img"></p><ul><li>启动之后就能得到这样的地址，将地址分享给你的朋友，用浏览器打开即可在多台电脑上实现云端出图</li></ul><p><img src="'+Ce+'" alt="img"></p><ul><li>四、总结</li><li>上面就是以一个小白的视角搭建云端StableDiffusion的整体流程，注意啊，只是云端搭建流程，软件使用技巧体系过于庞大就不在这里详细说了。有说得不够详细的地方欢迎评论区留言讨论，如果有兴趣想了解其他的知识，我会根据具网友的反馈出额外的教程。</li><li>全程操作下来，总共花费79元（可用15天），时长大概有4个小时左右，毕竟我可是传了将近100多G 的文件上去呢。</li><li>最后，在线征集想一块租用服务器的小伙伴，合租是当前玩AI绘画最经济、实惠、高效的办法</li></ul>',439),Ie=[qe];function De(Fe,Pe,Se,Ee,xe,Ne){return s(),a("div",null,Ie)}const Ge=e(ve,[["render",De]]);export{Me as __pageData,Ge as default};
